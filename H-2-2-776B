
//package com.prac.math;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class SherlockGirlfriend {
	private static final int MAX_PRIME_SIZE = 100002;
	private static boolean isPrime[] = new boolean[MAX_PRIME_SIZE];
	static {
		initPrime();
	}
	public static void main(String[] args) throws IOException {
		InputStreamReader inputStreamReader = new InputStreamReader(System.in);
		BufferedReader bufferedReader = new  BufferedReader(inputStreamReader);
		int n = Integer.parseInt(bufferedReader.readLine().trim());
		processPriceandColor(n);
		bufferedReader.close();
		inputStreamReader.close();
	}
	private static void processPriceandColor(int n) {
		if(n>2)
		{
			System.out.println(2);
		}
		else
		{
			System.out.println(1);
		}
		for(int i=2;i<n+2;i++)
		{
			if(isPrime[i])
			{
				System.out.print(1+" ");
			}
			else
			{
				System.out.print(2+" ");
			}
		}
		System.out.println();
		
	}
	private static void initPrime() {
		Arrays.fill(isPrime, true);
		isPrime[0]=isPrime[1]=false;
		
		for(int i = 2;i*i<MAX_PRIME_SIZE;i++)
		{
			if(isPrime[i])
			{
				for(int j = i*i;j<MAX_PRIME_SIZE;j+=i)
				{
					isPrime[j] = false;
				}//j
			}//if
		}//i
		
	}//init prime

}
