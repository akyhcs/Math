/*There are N boys and M girls attending a class.

The teacher needs to choose a group containing exactly 
X students containing no less than 4 boys and no less than one girl for an project.

How many ways are there to choose a group?

Input Format
The first line of the input contains a single integer 
T denoting the number of test cases. The description of T test cases follows.

For each test case contains three numbers N,M and X.

Output Format
For each test case, print the number of ways to form a group on seperate line.

Constraints
1≤T≤10^5
4≤N≤30
1≤M≤30
5≤X≤N+M

Example
Input
1
5 2 5
Output
10
*/
//package com.prac.math;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	private static long pascal[][] = new long[61][61];
	static {
		initPascal();
		//printPascal();
	}
	public static void main(String[] args) throws IOException {
		 InputStreamReader inputStreamReader  = new InputStreamReader(System.in);
		 BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
		 int minBoys = 4;//provided in question
		 int minGirl = 1;//provided in question
		 int totalTest = Integer.parseInt(bufferedReader.readLine().trim());
		 while (totalTest-- >= 1) {
			 String secondLineInput[] = bufferedReader.readLine().trim().split(" ");
			 int totalBoys = Integer.parseInt(secondLineInput[0]);//total boys
			 int totalGirl = Integer.parseInt(secondLineInput[1]);//total gitrls
			 int x = Integer.parseInt(secondLineInput[2]);//total selection of boys and girls
			 long ans = 0;
			    for (int i=minBoys;i<x;i++) {//minboys should not exceed otherwise girls will go -ve
	                ans = ans + getNCR(totalBoys,i)*getNCR(totalGirl, x-i);
	            }
			 System.out.println(ans);
			 
		}	 
		 bufferedReader.close();
		 inputStreamReader.close();
	}
	private static long getNCR(int totalBoys, int minBoys) {
		
		return pascal[totalBoys][minBoys];
	}
	private static void printPascal() {
		for(int i =0 ;i<pascal.length;i++)
		{
			for (int j = 0; j <=i; j++) {
				System.out.print(pascal[i][j]+" ");
			}
			System.out.println();
		}
		
	}
	private static void initPascal() {
		for(int i = 0 ;i<pascal.length;i++)
		{
			for(int j = 0;j<=i;j++)
			{
				if(j==0 || j==i) 
				{ 
					pascal[i][j]=1; 
				}//if
				else
				{
					pascal[i][j] = pascal[i-1][j] + pascal[i-1][j-1];
				}//else
			}//j
		}//i
		
	}

}
