/*
You will be given T pairs of natural numbers A and B.

For each pair, output the number of common divisors between the two numbers.

Input Format
The first line of the input contains a single integer T denoting the number of test cases.

The description of T test cases follows.

The first line of each test case contains two integers 
A and B.

Output Format
For each test case, output the number of common divisors between the given pair on a seperate line.

Constraints
1≤T≤10^2

1≤A,B≤10^9

Example
Input
3
100000 100000
12 24
747794 238336
Output
36
6
2
*/

/* package codechef; // don't place package name! */
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */

public class Main
{
		/*
		https://www.geeksforgeeks.org/common-divisors-of-two-numbers
   */
		
	 public static void main(String[] args)
    {
       
        Scanner scanner = new Scanner(System.in);
        int totalTest = scanner.nextInt();
        
        while (totalTest>=1) {
            long num1 = scanner.nextLong();
            long num2 = scanner.nextLong();
            int totaCount = getTotalCount(num1,num2);
            System.out.println(totaCount);
            totalTest = totalTest-1;
        }
        if(scanner!=null)
        {
            scanner.close();
        }
        
    }

    private static int getTotalCount(long num1, long num2) {
        int c = 0;
        long n = gcd(num2,num1);
        for (long i = 1; i*i <= n ; i++) 
        {
            if(n%i==0)
			{
				if((n/i)==i)
            	{
                		c=c+1;
            	}
				else
				{
						c=c+2;
				}
			
			}		
        }
        return c;
    }

    private static long gcd(long num2, long num1) {
        if(num2==num1)
            return num1;
        if(num2==1||num1==1)
         return 1;
         if(num2==0||num1==0)
            return num2==0?num1:num2;
        long max = num2>num1?num2:num1;
        long min = num2>num1?num1:num2;
        while (max%min!=0) {
            long temp = max;
            max = min;
            min = temp%min;
        }
        return min;
    }
}
